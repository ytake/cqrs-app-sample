version: '3'
services:
  php:
    container_name: php8
    build:
      context: .
      dockerfile: docker/php-fpm/Dockerfile
    volumes:
      - ./:/var/www/html
    depends_on:
      - es01
      - mysql
      - kafka
      - zookeeper
    ports:
      - 80:80
    tty: true
    networks:
      - sample
  es01:
    image: elasticsearch:7.10.1
    container_name: es01
    environment:
      - network.host=0.0.0.0
      - node.name=es01
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    tty: true
    networks:
      - sample
  kibana:
    image: kibana:7.10.1
    container_name: kibana
    environment:
      - server.host=0.0.0.0
    links:
      - es01:elasticsearch
    ports:
      - 5601:5601
    networks:
      - sample
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: sample
      MYSQL_USER: sample
      MYSQL_PASSWORD: secret
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/mysql.conf.d/z.cnf
    tty: true
    networks:
      - sample
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    container_name: zookeeper
    tty: true
    networks:
      - sample
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9093:9093'
    container_name: kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    tty: true
    networks:
      - sample
networks:
  sample:
    driver: bridge
